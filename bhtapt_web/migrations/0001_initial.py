# Generated by Django 4.1.5 on 2024-03-07 16:18

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('account_type', models.CharField(choices=[('cash', 'Cash'), ('bank', 'Bank'), ('other', 'Other')], max_length=50, null=True)),
                ('balance', models.DecimalField(decimal_places=3, default=0.0, max_digits=20)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('booking_no', models.CharField(blank=True, max_length=100, null=True)),
                ('booking_type', models.CharField(choices=[('1', 'Daily'), ('2', 'Yearly'), ('3', 'Monthly')], max_length=40)),
                ('check_in_date', models.DateTimeField()),
                ('expected_checkout_date', models.DateTimeField(null=True)),
                ('check_out_date', models.DateTimeField(blank=True, null=True)),
                ('rate', models.DecimalField(decimal_places=3, max_digits=10)),
                ('duration', models.IntegerField(default=1, null=True)),
                ('advance_payment', models.DecimalField(decimal_places=3, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=3, default=0.0, max_digits=10)),
                ('mobile', models.CharField(max_length=20, null=True)),
                ('address', models.CharField(max_length=300, null=True)),
                ('amount_due', models.DecimalField(decimal_places=3, default=0.0, max_digits=10)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('id_proof', models.CharField(blank=True, choices=[('1', 'Driving Licence'), ('2', 'Passport'), ('3', 'PAN Card')], max_length=10, null=True)),
                ('id_no', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(blank=True, choices=[('1', 'Pending'), ('2', 'Booked'), ('3', 'Completed')], default='2', max_length=50, null=True)),
                ('discount', models.DecimalField(decimal_places=3, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Cash_Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_status', models.CharField(choices=[('1', 'Paid'), ('2', 'Pending'), ('3', 'Rejected')], default='1', max_length=50)),
                ('narration', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Cash_Payment_booking', to='bhtapt_web.booking')),
                ('from_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Cash_Payment_fromaccount', to='bhtapt_web.account')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_code', models.CharField(max_length=200, null=True)),
                ('category_name', models.CharField(max_length=40, null=True, unique=True)),
                ('category_description', models.CharField(max_length=200, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile', models.CharField(max_length=20, null=True, unique=True)),
                ('address', models.CharField(max_length=300, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('id_proof', models.CharField(blank=True, choices=[('1', 'Driving Licence'), ('2', 'Passport'), ('3', 'PAN Card')], max_length=10, null=True)),
                ('id_no', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor_no', models.IntegerField(null=True, unique=True)),
                ('no_of_rooms', models.IntegerField(null=True)),
                ('soft_delete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Journel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_status', models.CharField(choices=[('1', 'Paid'), ('2', 'Pending'), ('3', 'Rejected')], default='1', max_length=50)),
                ('narration', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Journal_booking', to='bhtapt_web.booking')),
                ('from_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='journal_fromaccount', to='bhtapt_web.account')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_status', models.CharField(choices=[('1', 'Paid'), ('2', 'Pending'), ('3', 'Rejected')], max_length=50)),
                ('narration', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_booking', to='bhtapt_web.booking')),
                ('from_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_fromaccount', to='bhtapt_web.account')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('transaction_type', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=6)),
                ('transaction_remark', models.CharField(blank=True, max_length=40, null=True)),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions_account', to='bhtapt_web.account')),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions_bpoking', to='bhtapt_web.booking')),
                ('cash_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions_cash_payment', to='bhtapt_web.cash_payment')),
                ('journal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions_journal', to='bhtapt_web.journel')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions_payment', to='bhtapt_web.payment')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('yearly_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monthly_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('daily_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('room_status', models.CharField(blank=True, choices=[('1', 'Avaialble'), ('2', 'Booked'), ('3', 'Reserved'), ('4', 'Cleaning')], default='1', max_length=200, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bhtapt_web.category')),
                ('floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bhtapt_web.floor')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('check_in_date', models.DateTimeField()),
                ('check_out_date', models.DateTimeField()),
                ('reservation_status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bhtapt_web.room')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_room', to='bhtapt_web.room'),
        ),
        migrations.AddField(
            model_name='payment',
            name='to_account',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_toaccount', to='bhtapt_web.account'),
        ),
        migrations.AddField(
            model_name='journel',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journel_room', to='bhtapt_web.room'),
        ),
        migrations.AddField(
            model_name='journel',
            name='to_account',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='journel_toaccount', to='bhtapt_web.account'),
        ),
        migrations.AddField(
            model_name='cash_payment',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cashpayment_room', to='bhtapt_web.room'),
        ),
        migrations.AddField(
            model_name='cash_payment',
            name='to_account',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Cash_Payment_toaccount', to='bhtapt_web.account'),
        ),
        migrations.AddField(
            model_name='booking',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bhtapt_web.customer'),
        ),
        migrations.AddField(
            model_name='booking',
            name='reservation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservation_booking', to='bhtapt_web.reservation'),
        ),
        migrations.AddField(
            model_name='booking',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bhtapt_web.room'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=40, null=True)),
                ('email', models.EmailField(max_length=30, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('user_type', models.CharField(blank=True, choices=[('1', 'Admin'), ('2', 'Appartment'), ('3', 'Staff')], max_length=40, null=True)),
                ('place', models.CharField(blank=True, max_length=40, null=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
